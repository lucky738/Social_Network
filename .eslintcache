[{"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\index.js":"1","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\store.js":"3","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\app-reducer.ts":"4","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\auth-reducer.ts":"5","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\dialogs-reducer.ts":"6","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\profile-reducer.ts":"7","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\users-reducer.ts":"8","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\navbar-reducer.ts":"9","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Music\\Music.tsx":"10","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\common\\paginator\\Paginator.tsx":"11","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\Users.tsx":"12","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\redux-store.ts":"13","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\UsersContainer.tsx":"14","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\users-selectors.ts":"15","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\common\\preloader\\Preloader.tsx":"16","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx":"17","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx":"18","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\Dialogs.tsx":"19","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx":"20","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Header\\Header.tsx":"21","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\News\\News.tsx":"22","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Navbar\\Navbar.tsx":"23","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx":"24","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\Profile.tsx":"25","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx":"26","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx":"27","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\User.tsx":"28","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Settings\\Settings.tsx":"29","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\api.ts":"30","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Login\\Login.tsx":"31","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\utils\\validators\\validators.ts":"32","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\common\\FormControls\\FormsControls.tsx":"33","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\users-api.ts":"34","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\profile-api.ts":"35","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\auth-api.ts":"36","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\security-api.ts":"37","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\utils\\helpers\\objects-helpers.ts":"38","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx":"39","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\App.tsx":"40","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\hoc\\withSuspense.tsx":"41","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\hoc\\withAuthRedirect.tsx":"42","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx":"43","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx":"44","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx":"45","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileContainer.tsx":"46","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx":"47","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\UsersSearchForm.tsx":"48","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\auth-selectors.ts":"49","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\pages\\chat\\ChatPage.tsx":"50","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\chat-reducer.ts":"51","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\chat-api.ts":"52"},{"size":462,"mtime":1617117746066,"results":"53","hashOfConfig":"54"},{"size":362,"mtime":499162500000,"results":"55","hashOfConfig":"54"},{"size":2309,"mtime":1613662875704,"results":"56","hashOfConfig":"57"},{"size":913,"mtime":1620228920465,"results":"58","hashOfConfig":"54"},{"size":2856,"mtime":1620319448285,"results":"59","hashOfConfig":"54"},{"size":1378,"mtime":1620402145147,"results":"60","hashOfConfig":"54"},{"size":3912,"mtime":1621787834016,"results":"61","hashOfConfig":"54"},{"size":4541,"mtime":1622184568296,"results":"62","hashOfConfig":"54"},{"size":201,"mtime":1620407530233,"results":"63","hashOfConfig":"54"},{"size":141,"mtime":1618412904501,"results":"64","hashOfConfig":"54"},{"size":2376,"mtime":1620925916342,"results":"65","hashOfConfig":"54"},{"size":3369,"mtime":1622184560034,"results":"66","hashOfConfig":"54"},{"size":1361,"mtime":1622566401551,"results":"67","hashOfConfig":"54"},{"size":751,"mtime":1622136755610,"results":"68","hashOfConfig":"54"},{"size":918,"mtime":1621097440056,"results":"69","hashOfConfig":"54"},{"size":154,"mtime":1618585615078,"results":"70","hashOfConfig":"54"},{"size":260,"mtime":1620739651343,"results":"71","hashOfConfig":"54"},{"size":675,"mtime":1618587220988,"results":"72","hashOfConfig":"54"},{"size":1228,"mtime":1621789944008,"results":"73","hashOfConfig":"54"},{"size":566,"mtime":1620407045053,"results":"74","hashOfConfig":"54"},{"size":2087,"mtime":1622138205821,"results":"75","hashOfConfig":"54"},{"size":227,"mtime":1620497043287,"results":"76","hashOfConfig":"54"},{"size":1198,"mtime":1621789177894,"results":"77","hashOfConfig":"54"},{"size":551,"mtime":1620665112605,"results":"78","hashOfConfig":"54"},{"size":855,"mtime":1621013357627,"results":"79","hashOfConfig":"54"},{"size":1337,"mtime":1621012840115,"results":"80","hashOfConfig":"54"},{"size":2030,"mtime":1620580953997,"results":"81","hashOfConfig":"54"},{"size":1591,"mtime":1620574147854,"results":"82","hashOfConfig":"54"},{"size":153,"mtime":1618744299670,"results":"83","hashOfConfig":"54"},{"size":692,"mtime":1620143660548,"results":"84","hashOfConfig":"54"},{"size":2476,"mtime":1621356724323,"results":"85","hashOfConfig":"54"},{"size":397,"mtime":1619098053217,"results":"86","hashOfConfig":"54"},{"size":1653,"mtime":1620746767646,"results":"87","hashOfConfig":"54"},{"size":678,"mtime":1622184564111,"results":"88","hashOfConfig":"54"},{"size":1090,"mtime":1621013024598,"results":"89","hashOfConfig":"54"},{"size":782,"mtime":1620319219913,"results":"90","hashOfConfig":"54"},{"size":262,"mtime":1620143982492,"results":"91","hashOfConfig":"54"},{"size":265,"mtime":1620401091469,"results":"92","hashOfConfig":"54"},{"size":1168,"mtime":1620750321143,"results":"93","hashOfConfig":"54"},{"size":6192,"mtime":1622185393662,"results":"94","hashOfConfig":"54"},{"size":318,"mtime":1620409531410,"results":"95","hashOfConfig":"54"},{"size":896,"mtime":1620409402924,"results":"96","hashOfConfig":"54"},{"size":1031,"mtime":1620578437963,"results":"97","hashOfConfig":"54"},{"size":2862,"mtime":1621012722518,"results":"98","hashOfConfig":"54"},{"size":977,"mtime":1620664854996,"results":"99","hashOfConfig":"54"},{"size":2514,"mtime":1621013669093,"results":"100","hashOfConfig":"54"},{"size":454,"mtime":1620665184813,"results":"101","hashOfConfig":"54"},{"size":2087,"mtime":1621703701269,"results":"102","hashOfConfig":"54"},{"size":235,"mtime":1622136846318,"results":"103","hashOfConfig":"54"},{"size":3047,"mtime":1623220050743,"results":"104","hashOfConfig":"54"},{"size":2870,"mtime":1623220012328,"results":"105","hashOfConfig":"54"},{"size":2684,"mtime":1623219856949,"results":"106","hashOfConfig":"54"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},"1i2iu8f",{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"109"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4d7qxa",{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"116"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"116"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"116"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"116"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"159"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"116"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"116"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"116"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"116"},{"filePath":"180","messages":"181","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"182","messages":"183","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"190"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"116"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"116"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"116"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"116"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"223","usedDeprecatedRules":"116"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},{"filePath":"226","messages":"227","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"116"},"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\index.js",[],["228","229"],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\store.js",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\app-reducer.ts",[],["230","231"],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\auth-reducer.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\dialogs-reducer.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\profile-reducer.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\users-reducer.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\navbar-reducer.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Music\\Music.tsx",["232"],"import s from \"./Music.module.css\";\r\nconst Music = () => {\r\n  return (\r\n    <div>\r\n      Music\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Music;","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\common\\paginator\\Paginator.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\Users.tsx",["233","234"],"\r\nimport * as queryString from 'querystring';\r\nimport React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router\";\r\nimport { FilterType, follow, requestUsers, unfollow } from \"../../redux/users-reducer\";\r\nimport { getCurrentPage, getFollowingProgress, getPageSize, getTotalUsersCount, getUsers, getUsersFilter } from \"../../redux/users-selectors\";\r\nimport Paginator from \"../common/paginator/Paginator\";\r\nimport User from \"./User\";\r\nimport UsersSearchForm from \"./UsersSearchForm\";\r\n\r\ntype PropsType = {}\r\n\r\ntype QueryParamsType = { term?: string; page?: string; friend?: string }\r\n\r\nexport const Users: React.FC<PropsType> = (props) => {\r\n\r\n    const totalUsersCount = useSelector(getTotalUsersCount)\r\n    const currentPage = useSelector(getCurrentPage)\r\n    const pageSize = useSelector(getPageSize)\r\n    const users = useSelector(getUsers)\r\n    const followingInProgress = useSelector(getFollowingProgress)\r\n    const filter = useSelector(getUsersFilter)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryParamsType\r\n\r\n        let actualPage = currentPage\r\n        let actualFilter = filter\r\n\r\n        if (!!parsed.page) actualPage = Number(parsed.page)\r\n        if (!!parsed.term) actualFilter = { ...actualFilter, term: parsed.term as string }\r\n\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFilter = { ...actualFilter, friend: null }\r\n                break\r\n            case 'false':\r\n                actualFilter = { ...actualFilter, friend: false }\r\n                break\r\n            case 'true':\r\n                actualFilter = { ...actualFilter, friend: true }\r\n                break\r\n        }\r\n        dispatch(requestUsers(actualPage, pageSize, actualFilter))\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryParamsType = {}\r\n\r\n        if (!!filter.term) query.term = filter.term\r\n        if (filter.friend !== null) query.friend = String(filter.friend)\r\n        if (currentPage !== 1) query.page = String(currentPage)\r\n        history.push({\r\n            pathname: '/developers',\r\n            search: queryString.stringify(query)\r\n        })\r\n\r\n    }, [filter, currentPage])\r\n\r\n    const onPageChanged = (currentPage: number) => {\r\n        dispatch(requestUsers(currentPage, pageSize, filter))\r\n    }\r\n    const onFilterChanged = (filter: FilterType) => {\r\n        dispatch(requestUsers(1, pageSize, filter))\r\n    }\r\n\r\n    const followCallback = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n    const unfollowCallback = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n    return <div>\r\n\r\n        <UsersSearchForm onFilterChanged={onFilterChanged} />\r\n\r\n        <Paginator currentPage={currentPage}\r\n            totalItemsCount={totalUsersCount}\r\n            pageSize={pageSize}\r\n            onPageChanged={onPageChanged} />\r\n        <div>\r\n            {\r\n                users.map(u => <User user={u}\r\n                    key={u.id}\r\n                    followingInProgress={followingInProgress}\r\n                    unfollow={unfollowCallback}\r\n                    follow={followCallback}\r\n                />)\r\n            }\r\n        </div>\r\n    </div>\r\n}","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\redux-store.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\UsersContainer.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\users-selectors.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\common\\preloader\\Preloader.tsx",["235"],"import preloader from '../../../assets/images/preloader.svg'\r\n\r\nlet Preloader = () => {\r\n    return <img src={preloader}/>\r\n}\r\n\r\nexport default Preloader;","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\Message\\Message.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\DialogItem\\DialogItem.tsx",["236"],"import { FC } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from \"./../Dialogs.module.css\";\r\n\r\ntype PropsType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nconst DialogItem: FC<PropsType> = ({id, name, ...props}) => {\r\n  let path = \"/dialogs/\" + id;\r\n  return (\r\n    <NavLink to={path} activeClassName={s.activeLink}>\r\n      <div className={`${s.chats} ${s.activeLink}`}>\r\n        <img src=\"https://static01.nyt.com/images/2019/11/05/science/28TB-SUNSET1/merlin_163473282_fe17fc6b-78b6-4cdd-b301-6f63e6ebdd7a-superJumbo.jpg\" alt=\"image\" className={s.chatsImage}/>\r\n        <p>{name}</p>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\n\r\nexport default DialogItem;\r\n","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\Dialogs.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\DialogsContainer.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Header\\Header.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\News\\News.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Navbar\\Navbar.tsx",[],["237","238"],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\MyPostsContainer.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\Profile.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileStatusWithHooks.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileDataForm.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\User.tsx",["239"],"import React, { FC } from \"react\";\r\nimport styles from './users.module.css'\r\nimport userPhoto from '../../assets/images/cat.jpg'\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { UserType } from \"../../types/types\";\r\n\r\ntype PropsType = {\r\n    user: UserType\r\n    followingInProgress: Array<number> \r\n    unfollow: (userId: number) => void\r\n    follow: (userId: number) => void\r\n}\r\n\r\nlet User: FC<PropsType> = ({user, followingInProgress, unfollow, follow}) => {\r\n    return <div>\r\n        <span>\r\n            <div>\r\n                <NavLink to={'profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                        className={styles.userPhoto} />\r\n                </NavLink>\r\n            </div>\r\n            <div>\r\n                {\r\n                    user.followed\r\n                        ? <button disabled={followingInProgress\r\n                            .some(id => id === user.id)} onClick={() => { unfollow(user.id) }}>Unfollow</button>\r\n                        : <button disabled={followingInProgress\r\n                            .some(id => id === user.id)} onClick={() => { follow(user.id) }}>Follow</button>\r\n                }\r\n            </div>\r\n        </span>\r\n        <span>\r\n            <span>\r\n                <div>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </span>\r\n            <span>\r\n                <div>{\"user.location.country\"}</div>\r\n                <div>{\"user.location.city\"}</div>\r\n            </span>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nexport default User;","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Settings\\Settings.tsx",["240"],"import s from \"./Settings.module.css\";\r\nconst Settings = () => {\r\n  return (\r\n    <div>\r\n      Settings\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\api.ts",["241"],"import axios, { AxiosResponse } from 'axios'\r\nimport { UserType } from '../types/types'\r\n\r\nexport enum ResultCodesEnum {\r\n    Success = 0, \r\n    Error = 1\r\n}\r\n\r\nexport enum ResultCodeForCaptchaEnum {\r\n    CaptchaIsRequired = 10\r\n}\r\n\r\nexport const instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"e44a54ed-1483-416a-8970-fe2efac19dae\"\r\n    }\r\n})\r\n\r\nexport type GetItemsType = {\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: null | string\r\n}\r\n\r\nexport type APIResponseType<D = {}, RC = ResultCodesEnum> = {\r\n    data: D\r\n    messages: Array<string>\r\n    resultCode: RC\r\n}","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Login\\Login.tsx",["242"],"import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\nimport { InjectedFormProps, reduxForm } from 'redux-form';\r\nimport { login } from '../../redux/auth-reducer';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { required } from '../../utils/validators/validators';\r\nimport { createField, GetStringKeys, Input } from '../common/FormControls/FormsControls';\r\nimport styles from '../common/FormControls/FormsControls.module.css';\r\n\r\ntype LoginFormOwnProps = {\r\n    captchaUrl: string | null\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, LoginFormOwnProps> & LoginFormOwnProps> =\r\n    ({ handleSubmit, error, captchaUrl }) => {\r\n        return <form onSubmit={handleSubmit}>\r\n            {createField<LoginFormValuesKeysType>(\"Email\", \"email\", [required], Input)}\r\n            {createField<LoginFormValuesKeysType>(\"Password\", \"password\", [required], Input,\r\n                { type: \"password\" })}\r\n            {createField<LoginFormValuesKeysType>(undefined, \"rememberMe\", [], Input,\r\n                { type: \"Checkbox\" }, \"remember me\")}\r\n\r\n\r\n            {captchaUrl && <img src={captchaUrl} />}\r\n            {captchaUrl && createField<LoginFormValuesKeysType>(\"Symbols from image\", \"captcha\",\r\n                [required], Input)}\r\n\r\n            {error && <div className={styles.formSummaryError} >\r\n                {error}\r\n            </div>}\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    }\r\n\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, LoginFormOwnProps>({ form: 'login' })(LoginForm)\r\n\r\n\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n    captcha: string\r\n}\r\n\r\ntype LoginFormValuesKeysType = GetStringKeys<LoginFormValuesType>\r\n\r\nexport const LoginPage: React.FC = () => {\r\n\r\n    const captchaUrl = useSelector((state: AppStateType) => state.auth.captchaUrl)\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const onSubmit = (formData: LoginFormValuesType) => {\r\n        dispatch(login(formData.email, formData.password, formData.rememberMe, formData.captcha))\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={captchaUrl} />\r\n    </div>\r\n}","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\utils\\validators\\validators.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\common\\FormControls\\FormsControls.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\users-api.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\profile-api.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\auth-api.ts",[],["243","244"],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\security-api.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\utils\\helpers\\objects-helpers.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Dialogs\\AddMessageForm\\AddMessageForm.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\App.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\hoc\\withSuspense.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\hoc\\withAuthRedirect.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\AddPostForm\\AddPostForm.tsx",["245"],"import { FC } from \"react\"\r\nimport { InjectedFormProps, reduxForm } from \"redux-form\"\r\nimport { required } from \"../../../../utils/validators/validators\"\r\nimport { createField, GetStringKeys, Textarea } from \"../../../common/FormControls/FormsControls\"\r\n\r\ntype PropsType = {}\r\n\r\nexport type AddPostFormValuesType = {\r\n    newPostText: string\r\n}\r\n\r\ntype AddPostFormValuesKeysType = GetStringKeys<AddPostFormValuesType>\r\n\r\nlet AddNewPostForm: FC<InjectedFormProps<AddPostFormValuesType, PropsType> & PropsType> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                {createField<AddPostFormValuesKeysType>(\"Post message\", \"newPostText\",\r\n                    [required], Textarea)}\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nlet AddNewPostFormRedux = reduxForm<AddPostFormValuesType, PropsType>\r\n    ({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default AddNewPostFormRedux","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileInfo\\ProfileInfo.tsx",["246"],"import Preloader from \"../../common/preloader/Preloader\";\r\nimport s from \"./ProfileInfo.module.css\";\r\nimport cat from '../../../assets/images/cat.jpg'\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\nimport React, { ChangeEvent, FC, useState } from \"react\";\r\nimport ProfileDataForm from \"./ProfileDataForm\";\r\nimport { ContactsType, ProfileType } from \"../../../types/types\";\r\n\r\ntype ProfileInfoPropsType = {\r\n  profile: ProfileType | null\r\n  status: string\r\n  updateStatus: (status: string) => void\r\n  isOwner: boolean\r\n  savePhoto: (photo: File) => void\r\n  saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\nconst ProfileInfo: FC<ProfileInfoPropsType> = ({ profile, status, updateStatus, isOwner, \r\n  savePhoto, saveProfile }) => {\r\n  const [editMode, setEditMode] = useState(false)\r\n\r\n  if (!profile) {\r\n    return <Preloader />\r\n  }\r\n\r\n  const onMainPhotoSelected = (e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      savePhoto(e.target.files[0])\r\n    }\r\n  }\r\n\r\n  const onSubmit = (formData: ProfileType) => {\r\n    saveProfile(formData).then(\r\n      () => setEditMode(false)\r\n    )\r\n  }\r\n  return (\r\n    <div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={profile.photos.large || cat} className={s.mainPhoto} />\r\n        {isOwner && <input type=\"file\" onChange={onMainPhotoSelected} />}\r\n\r\n        {editMode\r\n          ? <ProfileDataForm profile={profile} onSubmit={onSubmit} />\r\n          : <ProfileData goToEditMode={() => { setEditMode(true) }} profile={profile} isOwner={isOwner}\r\n          />}\r\n\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\ntype ProfileDataPropsType = {\r\n  profile: ProfileType\r\n  goToEditMode: () => void\r\n  isOwner: boolean\r\n}\r\n\r\nconst ProfileData: FC<ProfileDataPropsType> = ({ profile, goToEditMode, isOwner, ...props }) => {\r\n  return <div>\r\n    {isOwner && <div><button onClick={goToEditMode}>edit</button></div>}\r\n    <div>\r\n      <b>Full name:</b> {profile.fullName}\r\n    </div>\r\n\r\n    <div>\r\n      <b>Looking for a job:</b> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n    </div>\r\n\r\n    {profile.lookingForAJob && <div>\r\n      <b>My professional skill:</b> {profile.lookingForAJobDescription}\r\n    </div>}\r\n\r\n    <div>\r\n      <b>About me:</b> {profile.aboutMe}\r\n    </div>\r\n\r\n    <div>\r\n      <b>Contacts:</b>{Object.keys(profile.contacts).map(key => {\r\n        return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key as keyof ContactsType]} />\r\n      })}\r\n    </div>\r\n\r\n  </div>\r\n}\r\n\r\ntype ContactPropsType = {\r\n  contactTitle: string\r\n  contactValue: string\r\n}\r\n\r\nconst Contact: FC<ContactPropsType> = ({ contactTitle, contactValue }) => {\r\n  return <div className={s.contact}><i><b>{contactTitle}: </b></i> {contactValue}</div>\r\n}\r\n\r\nexport default ProfileInfo;","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\MyPosts.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\ProfileContainer.tsx",["247","248"],"import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from \"./Profile\";\r\nimport { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile } from '../../redux/profile-reducer'\r\nimport { Redirect, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { compose } from 'redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { ProfileType } from '../../types/types';\r\n\r\ntype MapPropsType = ReturnType<typeof mapStateToProps>\r\n\r\ntype DispatchPropsType = {\r\n  getUserProfile: (userId: number) => void\r\n  getStatus: (userId: number) => void\r\n  updateStatus: (status: string) => void\r\n  savePhoto: (photo: File) => void\r\n  saveProfile: (profile: ProfileType) => Promise<any>\r\n}\r\n\r\ntype PathParamsType = {\r\n  userId: string\r\n}\r\n\r\ntype PropsType = MapPropsType & DispatchPropsType\r\n  & RouteComponentProps<PathParamsType>\r\n\r\nclass ProfileContainer extends React.Component<PropsType> {\r\n\r\n  refreshProfile() {\r\n    let userId: number | null = +this.props.match.params.userId\r\n    // match which analyzes url, came here because of withRouter \r\n    if (!userId) {\r\n      debugger\r\n      userId = this.props.authorizedUserId\r\n      if (!userId) {\r\n        this.props.history.push(\"/login\")\r\n      }\r\n    }\r\n    if (!userId) {\r\n      console.error(\"ID should exist in URI params or in state('authorized')\")\r\n    } else {\r\n      this.props.getUserProfile(userId as number)\r\n      this.props.getStatus(userId as number)\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.refreshProfile();\r\n  }\r\n\r\n  componentDidUpdate(prevProps: PropsType) {\r\n    if (prevProps.match.params.userId !== this.props.match.params.userId) {\r\n      this.refreshProfile();\r\n    }\r\n  }\r\n  render() {\r\n    // if (!this.props.isAuth) return <Redirect to='/login' />\r\n    return (\r\n      <Profile {...this.props}\r\n        isOwner={!this.props.match.params.userId}\r\n        profile={this.props.profile}\r\n        status={this.props.status}\r\n        updateStatus={this.props.updateStatus}\r\n        savePhoto={this.props.savePhoto} />\r\n    );\r\n  }\r\n};\r\n\r\nlet mapStateToProps = (state: AppStateType) => ({\r\n  profile: state.profilePage.profile,\r\n  status: state.profilePage.status,\r\n  isAuth: state.auth.isAuth,\r\n  authorizedUserId: state.auth.userId\r\n})\r\n\r\nexport default compose<React.ComponentType>(connect(mapStateToProps,\r\n  { getUserProfile, getStatus, updateStatus, savePhoto, saveProfile }), withRouter)\r\n  (ProfileContainer)","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Profile\\MyPosts\\Post\\Post.tsx",["249"],"import { FC } from \"react\";\r\nimport s from \"./Post.module.css\";\r\n\r\ntype PropsType = {\r\n  message: string\r\n  likesCount: number\r\n}\r\n\r\nconst Post: FC<PropsType> = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src=\"https://www.meme-arsenal.com/memes/3d3bc634cc23f6176e9aead00cd7f790.jpg\" />\r\n      {props.message}\r\n      <div>\r\n        <span>likes - {props.likesCount}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Post;\r\n","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\components\\Users\\UsersSearchForm.tsx",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\auth-selectors.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\pages\\chat\\ChatPage.tsx",["250","251","252"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { sendMessage, startMessagesListening } from '../../redux/chat-reducer'\r\nimport { AppStateType } from '../../redux/redux-store'\r\n\r\ntype ChatMessageType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\n\r\nconst ChatPage: React.FC = () => {\r\n    return <div>\r\n        <Chat />\r\n    </div>\r\n}\r\n\r\nconst Chat: React.FC = () => {\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(startMessagesListening())\r\n        return () => {\r\n            dispatch(startMessagesListening())\r\n        }\r\n    }, [])\r\n    debugger\r\n    return <div>\r\n        {status === 'error' && <div>Some error occured. Please refresh the page</div>}\r\n        <>\r\n            <Messages />\r\n            <AddMessageForm />\r\n        </>\r\n\r\n    </div>\r\n}\r\n\r\nconst Messages: React.FC = ({ ...props }) => {\r\n    const messages = useSelector((state: AppStateType) => state.chat.messages)\r\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\r\n\r\n    const [isAutoScroll, setisAutoScroll] = useState(true)\r\n\r\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\r\n        const element = e.currentTarget\r\n        \r\n        if (Math.abs( (element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\r\n            !isAutoScroll && setisAutoScroll(true)\r\n        } else {\r\n            isAutoScroll && setisAutoScroll(false)\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isAutoScroll) {\r\n            messagesAnchorRef.current?.scrollIntoView({ behavior: 'smooth' })\r\n        }\r\n    }, [messages])\r\n\r\n    return <div style={{ height: '400px', overflowY: 'auto' }} onScroll={scrollHandler}>\r\n        {messages.map((m) => <Message key={m.id} message={m} />)}\r\n        <div ref={messagesAnchorRef}></div>\r\n    </div>\r\n}\r\n\r\ntype MessagePropsType = {\r\n    message: ChatMessageType\r\n}\r\n\r\nconst Message: React.FC<MessagePropsType> = React.memo(({ message, ...props }) => {\r\n    return <div>\r\n        <img src={message.photo} style={{ width: '30px' }} /> <b>{message.userName}</b> - {message.userId}\r\n        <br />\r\n        {message.message}\r\n        <hr />\r\n    </div>\r\n})\r\n\r\nconst AddMessageForm: React.FC = ({ ...props }) => {\r\n\r\n    const [message, setMessage] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const status = useSelector((state: AppStateType) => state.chat.status)\r\n\r\n    const sendMessageHandler = () => {\r\n        if (!message) {\r\n            return\r\n        }\r\n        dispatch(sendMessage(message))\r\n        setMessage('')\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <textarea onChange={e => setMessage(e.currentTarget.value)} value={message}></textarea>\r\n        </div>\r\n        <div>\r\n            <button disabled={status !== 'ready'} onClick={sendMessageHandler}>send</button>\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default ChatPage","C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\redux\\chat-reducer.ts",[],"C:\\Users\\User\\Desktop\\REACT\\first-project\\my-app\\src\\api\\chat-api.ts",[],{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"253","replacedBy":"254"},{"ruleId":"255","replacedBy":"256"},{"ruleId":"257","severity":1,"message":"258","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":9},{"ruleId":"261","severity":1,"message":"262","line":49,"column":8,"nodeType":"263","endLine":49,"endColumn":10,"suggestions":"264"},{"ruleId":"261","severity":1,"message":"265","line":62,"column":8,"nodeType":"263","endLine":62,"endColumn":29,"suggestions":"266"},{"ruleId":"267","severity":1,"message":"268","line":4,"column":12,"nodeType":"269","endLine":4,"endColumn":34},{"ruleId":"270","severity":1,"message":"271","line":15,"column":9,"nodeType":"269","endLine":15,"endColumn":191},{"ruleId":"253","replacedBy":"272"},{"ruleId":"255","replacedBy":"273"},{"ruleId":"267","severity":1,"message":"268","line":19,"column":21,"nodeType":"269","endLine":20,"endColumn":56},{"ruleId":"257","severity":1,"message":"258","line":1,"column":8,"nodeType":"259","messageId":"260","endLine":1,"endColumn":9},{"ruleId":"257","severity":1,"message":"274","line":1,"column":17,"nodeType":"259","messageId":"260","endLine":1,"endColumn":30},{"ruleId":"267","severity":1,"message":"268","line":25,"column":28,"nodeType":"269","endLine":25,"endColumn":52},{"ruleId":"253","replacedBy":"275"},{"ruleId":"255","replacedBy":"276"},{"ruleId":"257","severity":1,"message":"277","line":2,"column":10,"nodeType":"259","messageId":"260","endLine":2,"endColumn":15},{"ruleId":"267","severity":1,"message":"268","line":40,"column":9,"nodeType":"269","endLine":40,"endColumn":74},{"ruleId":"257","severity":1,"message":"278","line":5,"column":10,"nodeType":"259","messageId":"260","endLine":5,"endColumn":18},{"ruleId":"257","severity":1,"message":"279","line":6,"column":10,"nodeType":"259","messageId":"260","endLine":6,"endColumn":26},{"ruleId":"267","severity":1,"message":"268","line":12,"column":7,"nodeType":"269","endLine":12,"endColumn":92},{"ruleId":"261","severity":1,"message":"280","line":29,"column":8,"nodeType":"263","endLine":29,"endColumn":10,"suggestions":"281"},{"ruleId":"261","severity":1,"message":"282","line":61,"column":8,"nodeType":"263","endLine":61,"endColumn":18,"suggestions":"283"},{"ruleId":"267","severity":1,"message":"268","line":75,"column":9,"nodeType":"269","endLine":75,"endColumn":62},"no-native-reassign",["284"],"no-negated-in-lhs",["285"],"@typescript-eslint/no-unused-vars","'s' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'currentPage', 'dispatch', 'filter', 'history.location.search', and 'pageSize'. Either include them or remove the dependency array.","ArrayExpression",["286"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["287"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.",["284"],["285"],"'AxiosResponse' is defined but never used.",["284"],["285"],"'Field' is defined but never used.","'Redirect' is defined but never used.","'withAuthRedirect' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["288"],"React Hook useEffect has a missing dependency: 'isAutoScroll'. Either include it or remove the dependency array.",["289"],"no-global-assign","no-unsafe-negation",{"desc":"290","fix":"291"},{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},"Update the dependencies array to be: [currentPage, dispatch, filter, history.location.search, pageSize]",{"range":"298","text":"299"},"Update the dependencies array to be: [filter, currentPage, history]",{"range":"300","text":"301"},"Update the dependencies array to be: [dispatch]",{"range":"302","text":"303"},"Update the dependencies array to be: [isAutoScroll, messages]",{"range":"304","text":"305"},[1926,1928],"[currentPage, dispatch, filter, history.location.search, pageSize]",[2326,2347],"[filter, currentPage, history]",[761,763],"[dispatch]",[1757,1767],"[isAutoScroll, messages]"]